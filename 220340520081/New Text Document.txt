SECTION 1
	
Q1)Create table DEPT with the following structure:-
DEPTNO			int(2)
DNAME			varchar(15)
LOC				varchar(10)

Insert the following rows into the DEPT table:-
10	ACCOUNTING	NEW YORK
20	RESEARCH		DALLAS
30	SALES		CHICAGO
40	OPERATIONS	BOSTON




ANS =>  create table DEPT(DEPTNO int(2) primary key, DNAME varchar(15), LOC varchar(10)); insert into DEPT(DEPTNO,DNAME,LOC) values (10,'ACCOUNTING','NEW YORK');insert into DEPT(DEPTNO,DNAME,LOC) values(20,'RESEARCH','DALLAS'); insert into DEPT (DEPTNO,DNAME,LOC) values (30,'SALES','CHICAGO'); insert into DEPT(DEPTNO,DNAME,LOC) values (40,'OPERATIONS','BOSTON');

Q2)Create table EMP with the following structure:-
EMPNO			int(4)
ENAME			varchar(10)
JOB				varchar(9)
HIREDATE			date
SAL				float(7,2)
COMM			float(7,2)
DEPTNO			int(2)

Insert the following rows into the EMP table:-
7839	KING		MANAGER	1991-11-17	5000	NULL	10
7698	BLAKE	CLERK	1981-05-01	2850	NULL	30
7782	CLARK	MANAGER	1981-06-09	2450	NULL	10
7566	JONES	CLERK	1981-04-02	2975	NULL 20
7654	MARTIN	SALESMAN	1981-09-28	1250	1400	30
7499	ALLEN	SALESMAN	1981-02-20	1600	300	30



ANS =>
create table EMP(EMPNO int(4) primary key,ENAME varchar(10),JOB varchar(9),HIREDATE date,SAL float(7,2),COMM float(7,2),DEPTNO int(2));
insert into EMP(EMPNO,ENAME,JOB,HIREDATE,SAL,COMM,DEPTNO) values (7839,	'KING',	'MANAGER','1991-11-17',	'5000',NULL,10);
insert into EMP(EMPNO,ENAME,JOB,HIREDATE,SAL,COMM,DEPTNO) values (7698,	'BLAKE','CLERK','1981-05-01','2850',NULL,30);
insert into EMP(EMPNO,ENAME,JOB,HIREDATE,SAL,COMM,DEPTNO) values (7782,	'CLARK','MANAGER','1981-06-09','2450',NULL,10);
insert into EMP(EMPNO,ENAME,JOB,HIREDATE,SAL,COMM,DEPTNO) values (7566,	'JONES','CLERK','1981-04-02','2975',NULL,20);
insert into EMP(EMPNO,ENAME,JOB,HIREDATE,SAL,COMM,DEPTNO) values (7654,	'MARTIN','SALESMAN','1981-09-28','1250',1400,30);
insert into EMP(EMPNO,ENAME,JOB,HIREDATE,SAL,COMM,DEPTNO) values (7499,	'ALLEN','SALESMAN','1981-02-20','1600',300,30);

select * from EMP;

Q3)Display all the employees where SAL between 2500 and 5000 (inclusive of both).

ANS =>select * from EMP where SAL BETWEEN 2500 and 5000;

Q4)Display all the ENAMEs in descending order of ENAME
ANS =>select * from EMP order by ENAME desc;

Q5)Display all the JOBs in lowercase

ANS => select lower(JOB) from EMP;

Q6)Display the ENAMEs and the lengths of the ENAMEs.
ANS => select ENAME, LENGTH (ENAME) from EMP;

Q7)Display the DEPTNO and the count of employees who belong to that DEPTNO 
ANS => SELECT DEPTNO, COUNT(*) FROM EMP GROUP BY DEPTNO;

Q8)Display the DNAMEs and the ENAMEs who belong to that DNAME
ANS => select DNAME,ENAME from DEPTNO,EMP WHERE DNAME.DEPTNO = EMP.DEPTNO GROUP BY DEPT.deptno ORDER BY DEPT.deptno ASC;

Q9)Display the position at which the string ‘AR’ occurs in the ename.
ANS => SELECT ENAME,POSITION('ER'IN ENAME) AS First_Occ_ER FROM EMP;

Q10)Display the HRA for each employee given that HRA is 20% of SAL.
 ANS => SELECT ENAME SAL,SAL*0.2 AS HRA FROM EMP;






SECTION 2

Q1)
ANS =>
 CREATE TABLE TEMPP
( STRING_1 varchar(15), STRING_2 varchar(15), RESULT varchar(15));

DELIMITER //
CREATE PROCEDURE PROC1(STR1 VARCHAR(15), STR2 VARCHAR (15))
BEGIN
DECLARE X INT;
SET X = INSTR(STR2, STR1);
IF X > 0 THEN
INSERT INTO TEMPP (STRING_1,STRING_2,RESULT) VALUES (STR1,STR2,'PRESENT');
ELSE
INSERT INTO TEMPP (STRING_1, STRING _2,RESULT) VALUES (STR1, STR2,'NOT PRESENT');
END IF;
END; //
DELIMITER ;
	

Q2) 2.	Create a stored function by the name of FUNC1 to take three parameters, the sides of a triangle. The function should return a Boolean value:- TRUE if the triangle is valid, FALSE otherwise. A triangle is valid if the length of each side is less than the sum of the lengths of the other two sides. Check if the dimensions entered can form a valid triangle. Calling program for the stored function need not be written.


					


									
						

						